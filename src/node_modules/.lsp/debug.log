Hello from /Users/alextes/.vim/plugged/vim-reason-plus/reason-language-server.exe
Previous log location: /var/folders/yn/lcqyfy257z3gh2qwvddhm79h0000gn/T/lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json", "globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 9, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"languageId":"reason","text":"module Observable = {\n  let observers = ref([]);\n  let subscribe = observer => observers := [observer, ...observers^];\n  let next = value =>\n    List.iter(observer => observer#next(value), observers^);\n};\n\nmodule Alex = {\n  include Observable;\n  let count = ref(0);\n  let next = _ => count := count^ + 1;\n};\n\nAlex.next();\n\n/* module Observable = { */\n/*   type t('a) = {mutable observers: list('a)}; */\n/*   let make = () => {observers: []}; */\n/*   let next = (observable, value) => */\n/*     List.iter(observer => observer#next(value), observable.observers); */\n/*   let subscribe = (observable, observer) => */\n/*     observable.observers = [observer, ...observable.observers]; */\n/* }; */\n\n/* type therapist = {mutable beersTracked: int}; */\n/* type alcoholic = {mutable beersConsumed: int}; */\n\n/* let edwin = Observable.make(); */\n/* let alex = Observable.make(); */\n/* let freud = {beersTracked: 0}; */\n\n/* let drink = observable => { */\n/*   observable.beersConsumed = observable.beersConsumed + 1; */\n/*   List.iter( */\n/*     observer => observer.beersTracked = observer.beersTracked + 1, */\n/*     observable.observers, */\n/*   ); */\n/* }; */\n\n/* subscribe(edwin, freud); */\n/* subscribe(alex, freud); */\n/* drink(edwin); */\n/* drink(alex); */\n/* let num = freud.beersTracked; */\n/* Js.log({j|The therapist counted $num beers|j}); */\n","uri":"file:///Users/alextes/code/reason-notepad/src/Demo.re","version":0}}}
>> Build system: /Users/alextes/code/reason-notepad/node_modules/bs-platform/lib/bsb.exe -make-world
[1/3] [34mBuilding[39m [2mReasonNotepad.cmi[22m
[2/3] [34mBuilding[39m [2msrc/Demo.mlast[22m
[3/3] [34mBuilding[39m [2msrc/Demo.mlast.d[22m
[1/1] [34mBuilding[39m [2msrc/Demo-ReasonNotepad.cmj[22m

  We've found a bug for you!
  /Users/alextes/code/reason-notepad/src/Demo.re 1:21-6:1
  
  1 â”‚ module Observable = {
  2 â”‚   let observers = ref([]);
  . â”‚ ...
  5 â”‚     List.iter(observer => observer#next(value), observers^);
  6 â”‚ };
  7 â”‚ 
  8 â”‚ module Alex = {
  
  The type of this module contains type variables that cannot be generalized:
  {
    let observers: ref(list({_.. next: '_a => unit}));
    let subscribe: {_.. next: '_a => unit} => unit;
    let next: '_a => unit;
  }
  
  This happens when the type system senses there's a mutation/side-effect,
  in combination with a polymorphic value.
  Using or annotating that value usually solves it. More info:
  https://realworldocaml.org/v1/en/html/imperative-programming-1.html#side-effects-and-weak-polymorphism
  
>> Error

Affected files file:///Users/alextes/code/reason-notepad/src/Demo.re
Cleaning bsconfig.json
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/alextes/code/reason-notepad/bsconfig.json", "diagnostics": []}}
Deps 
Got source directories ./src - ./src/node_modules - ./src/node_modules/.lsp
Source directories: /Users/alextes/code/reason-notepad/src - /Users/alextes/code/reason-notepad/src/node_modules - /Users/alextes/code/reason-notepad/src/node_modules/.lsp
Source files found: /Users/alextes/code/reason-notepad/src/Demo.re
adding namespace ReasonNotepad : ReasonNotepad : /Users/alextes/code/reason-notepad/lib/bs/ReasonNotepad.cmt
-- All local modules found: 2
ReasonNotepad
impl /Users/alextes/code/reason-notepad/lib/bs/ReasonNotepad.cmt
Demo-ReasonNotepad
impl /Users/alextes/code/reason-notepad/lib/bs/src/Demo-ReasonNotepad.cmt
############ Namespaced as ReasonNotepad at /Users/alextes/code/reason-notepad/lib/bs/ReasonNotepad.cmt
Dependency dirs /Users/alextes/code/reason-notepad/node_modules/bs-platform/lib/ocaml
Running diagnostics for file:///Users/alextes/code/reason-notepad/src/Demo.re
running bsc /Users/alextes/code/reason-notepad/node_modules/bs-platform/lib/bsc.exe -c -I '/Users/alextes/code/reason-notepad/lib/bs' -I '/Users/alextes/code/reason-notepad/lib/bs/src' -I '/Users/alextes/code/reason-notepad/lib/bs/src/node_modules' -I '/Users/alextes/code/reason-notepad/lib/bs/src/node_modules/.lsp' -I '/Users/alextes/code/reason-notepad/node_modules/bs-platform/lib/ocaml' -I '/Users/alextes/code/reason-notepad/node_modules/bs-platform/lib/ocaml' -bin-annot -bs-no-builtin-ppx-ml -open ReasonNotepad -ppx /Users/alextes/code/reason-notepad/node_modules/bs-platform/lib/bsppx.exe -nostdlib -color always -w -30-40+6+7+27+32..39+44+45+101 -bs-re-out -impl /Users/alextes/code/reason-notepad/node_modules/.lsp/Demo-ReasonNotepad.ast with pwd /Users/alextes/code/reason-notepad
Ident!! Observable
<< Making lastDefinitions with type error for file:///Users/alextes/code/reason-notepad/src/Demo.re
type error here [1mFile "[1m", line 1, characters 20-203[0m[0m:
[1;31mError[0m: The type of this module,
       {
         let observers: ref(list({_.. next: '_a => unit}));
         let subscribe: {_.. next: '_a => unit} => unit;
         let next: '_a => unit;
       }, contains type variables that cannot be generalized
Sending notification {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///Users/alextes/code/reason-notepad/src/Demo.re", "diagnostics": [{"range": {"start": {"line": 0, "character": 20}, "end": {"line": 5, "character": 1}}, "message": "Error: The type of this module,\n       {\n         let observers: ref(list({_.. next: '_a => unit}));\n         let subscribe: {_.. next: '_a => unit} => unit;\n         let next: '_a => unit;\n       }, contains type variables that cannot be generalized", "severity": 1}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/hover","params":{"position":{"character":7,"line":7},"textDocument":{"uri":"file:///Users/alextes/code/reason-notepad/src/Demo.re"}},"id":24}
[server] Got a method textDocument/hover
[server] processing took 0.0262260437012ms
Sending response {"id": 24, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"textDocument/hover","params":{"position":{"character":12,"line":8},"textDocument":{"uri":"file:///Users/alextes/code/reason-notepad/src/Demo.re"}},"id":25}
[server] Got a method textDocument/hover
[server] processing took 0.0479221343994ms
Sending response {"id": 25, "jsonrpc": "2.0", "result": {"range": {"start": {"line": 8, "character": 10}, "end": {"line": 8, "character": 20}}, "contents": {"kind": "markdown", "value": "```\nmodule Observable = {\n  let observers: Pervasives.ref(\n  list(< next : 'a -> unit; .. >)\n);\n  let subscribe: < next : 'a -> unit; .. > => unit;\n  let next: 'a => unit;\n}\n```"}}}
Read message 
{"jsonrpc":"2.0","method":"exit","params":null}
Got exit without shutdown. Erroring out
